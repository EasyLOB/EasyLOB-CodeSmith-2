<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="..\CodeSmithHelper.cs" Inherits="XCodeSmith.CodeSmithHelper" Debug="False" Description="" %>

<%@ Property Name="Culture" Type="XCodeSmith.Cultures" Category="Context" Description="Culture for Plural Rules" %>
<%@ Property Name="Namespace" Type="String" Category="Context" Description="Namespace [using Namespace]" %>

<%@ Property Name="Database" Type="String" Category="Database" Description="Database [using Namespace.Data.Database]" %>
<%@ Property Name="SourceTables" Type="SchemaExplorer.TableSchemaCollection" Category="Database" Description="Tables" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
using <%= Database %>.Data;
using EasyLOB.Persistence;
using EasyLOB.Security;

namespace <%= Namespace %>
{
    public class <%= Database %>UnitOfWorkLINQ2DB : UnitOfWorkLINQ2DB, I<%= Database %>UnitOfWork
    {
        #region Methods

        public <%= Database %>UnitOfWorkLINQ2DB(IAuthenticationManager authenticationManager)
            : base(new <%= Database %>LINQ2DB(), authenticationManager)
        {
            Domain = "<%= Database %>";

<%  foreach (TableSchema table in SourceTables) { %>
            Repositories.Add(typeof(<%= ClassName(table.Name, Culture) %>), new <%= Database %><%= ClassName(table.Name, Culture) %>RepositoryLINQ2DB(this));            
<%  } %>

            //<%= Database %>LINQ2DB connection = (<%= Database %>LINQ2DB)base.Connection;
        }

        public override IGenericRepository<TEntity> GetRepository<TEntity>()
        {
            if (!Repositories.Keys.Contains(typeof(TEntity)))
            {
                var repository = new <%= Database %>GenericRepositoryLINQ2DB<TEntity>(this);
                Repositories.Add(typeof(TEntity), repository);
            }

            return Repositories[typeof(TEntity)] as IGenericRepository<TEntity>;
        }

        #endregion Methods
    }
}

