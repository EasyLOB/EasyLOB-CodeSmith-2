<%@ CodeTemplate Language="C#" TargetLanguage="C#" Src="..\CodeSmithHelper.cs" Inherits="XCodeSmith.CodeSmithHelper" Debug="False" Description="" %>

<%@ Property Name="Culture" Type="XCodeSmith.Cultures" Category="Context" Description="Culture for Plural Rules" %>
<%@ Property Name="Namespace" Type="String" Category="Context" Description="Namespace [using Namespace]" %>

<%@ Property Name="Database" Type="String" Category="Database" Description="Database [using Namespace.Data.Database]" %>
<%@ Property Name="SourceTables" Type="SchemaExplorer.TableSchemaCollection" Category="Database" Description="Tables" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="System.Data" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Data" %>
using EasyLOB.Data;
using EasyLOB.Persistence;

namespace <%= Namespace %>
{
    public class <%= Database %>GenericRepositoryRavenDB<TEntity> : GenericRepositoryRavenDB<TEntity>, I<%= Database %>GenericRepository<TEntity>
        where TEntity : class, IZDataBase
    {
        #region Methods

        public <%= Database %>GenericRepositoryRavenDB(IUnitOfWork unitOfWork)
            : base(unitOfWork)
        {
            DocumentStore = (unitOfWork as <%= Database %>UnitOfWorkRavenDB).DocumentStore;
            DocumentSession = (unitOfWork as <%= Database %>UnitOfWorkRavenDB).DocumentSession;            
        }

        #endregion Methods
    }
}
